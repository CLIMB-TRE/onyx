{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Onyx - API for Pathogen Metadata","text":""},{"location":"#introduction","title":"Introduction","text":"<p>This is the documentation for Onyx, a database and API for managing sample metadata, their analyses, and other associated data.</p> <p>As part of CLIMB-TRE, Onyx serves as the central metadata repository for the following projects:</p> <ul> <li>mSCAPE (Metagenomics Surveillance Collaboration and Analysis Programme)   A collaborative initiative led by UKHSA, involving a consortium of NHS and academic partners, to deliver a pilot surveillance network trialling the use of metagenomic data for public health surveillance and pathogen analysis.</li> <li>PATH-SAFE (Pathogen Surveillance in Agriculture, Food and Environment)   Led by the FSA, PATH-SAFE piloted the development of a national surveillance network to improve the detection and tracking of foodborne human pathogens and AMR within agriculture.</li> <li>synthSCAPE (Synthetic dataset for mSCAPE)</li> <li>openMGS (Open Meta-Genomic Surveillance)</li> </ul>"},{"location":"#contents","title":"Contents","text":"<p>CLI &amp; Python API Learn how to use the Onyx command-line interface and Python API.</p> <p>JupyterLab Extension Learn how to use the Onyx JupyterLab extension and graphical user interface.</p> <p>Types Learn about the different field types available in Onyx.</p> <p>Lookups Learn about the different field lookups available in Onyx.</p>"},{"location":"backend/permissions/","title":"Permissions","text":""},{"location":"backend/permissions/#roles","title":"Roles","text":""},{"location":"backend/permissions/#available-roles","title":"Available roles","text":""},{"location":"backend/permissions/#is_active","title":"<code>is_active</code>","text":"<p>Active users are any user with access to Onyx.</p> <p>Users with the <code>is_active</code> role (and no other roles) do not have access to any endpoints. Their account is 'waiting' to be approved. It can be viewed and approved by a member of staff from the <code>accounts.waiting</code> and <code>accounts.approve</code> endpoints respectively.</p> <p>Account approval is currently managed by staff members only. In future, this could be managed by adding a 'site admin' role to Onyx (if it became a requested feature).</p> <p>To de-activate a user, and lock them out of Onyx, set their <code>is_active</code> role to <code>False</code>.</p>"},{"location":"backend/permissions/#is_approved","title":"<code>is_approved</code>","text":"<p>Approved users represent the standard user in Onyx.</p> <p>Users with the <code>is_active</code> and <code>is_approved</code> roles gain the ability to:</p> <ul> <li>Login/logout via the <code>knox_login</code>, <code>knox_logout</code> and <code>knox_logoutall</code> endpoints</li> <li>View their profile via the <code>accounts.profile</code> endpoint</li> <li>List their latest API activity via the <code>accounts.activity</code> endpoint</li> <li>List other users in their site via the <code>accounts.siteusers</code> endpoint</li> <li>List their available projects via the <code>projects</code> endpoint</li> <li>List information about project data types via the <code>projects.types</code> endpoint</li> <li>List information about type lookups via the <code>projects.lookups</code> endpoint</li> </ul> <p>To interact with data from a specific project, they would need to be assigned to a group. The type of group(s) they are a member of determines what actions they can carry out in a project.</p>"},{"location":"backend/permissions/#is_staff","title":"<code>is_staff</code>","text":"<p>Staff users are special users with elevated privileges in Onyx.</p> <p>Users with the <code>is_active</code>, <code>is_approved</code> and <code>is_staff</code> roles gain the ability to:</p> <ul> <li>List users waiting for approval via the <code>accounts.waiting</code> endpoint</li> <li>Approve waiting users via the <code>accounts.approve</code> endpoint</li> <li>List users across all sites via the <code>accounts.allusers</code> endpoint</li> <li>Create/retrieve an <code>analyst</code> user for a specific project, via the <code>accounts.projectuser</code> endpoint</li> <li>For a given project they are assigned to (and have the required actions on):</li> <li>View value changes in the history of an object for any site</li> <li>Recover an anonymised identifier for any site</li> <li>Update an object for any site</li> <li>Delete an object for any site</li> </ul>"},{"location":"backend/permissions/#managing-roles-for-a-user","title":"Managing roles for a user","text":""},{"location":"backend/permissions/#list-roles-for-a-user","title":"List roles for a user","text":"<pre><code>$ python manage.py user roles &lt;USER&gt;\n</code></pre>"},{"location":"backend/permissions/#grant-roles-to-a-user","title":"Grant roles to a user","text":"<pre><code>$ python manage.py user roles &lt;USER&gt; --grant &lt;ROLE1&gt; &lt;ROLE2&gt;\n</code></pre>"},{"location":"backend/permissions/#revoke-roles-from-a-user","title":"Revoke roles from a user","text":"<pre><code>$ python manage.py user roles &lt;USER&gt; --revoke &lt;ROLE1&gt; &lt;ROLE2&gt;\n</code></pre>"},{"location":"backend/permissions/#groups","title":"Groups","text":""},{"location":"backend/permissions/#available-groups","title":"Available groups","text":""},{"location":"backend/permissions/#admin","title":"<code>admin</code>","text":"<p>Actions: <code>add</code> <code>change</code> <code>get</code> <code>list</code> <code>filter</code> <code>history</code> <code>identify</code></p> <p>Users in the <code>admin</code> group for a project have the ability to:</p> <ul> <li>Add data to a project, for any site (NOTE: this might be restricted for non-staff in a future update)</li> <li>Change data in a project, including altering its published and suppressed status, for their site only (unless they are a member of staff)</li> <li>Get individual objects from the project</li> <li>List and filter data from the project (including unpublished data)</li> <li>View the history of individual objects from the project</li> <li>Recover anonymised identifiers from the project</li> </ul>"},{"location":"backend/permissions/#uploader","title":"<code>uploader</code>","text":"<p>Actions: <code>add</code> <code>change</code></p> <p>Users in the <code>uploader</code> group for a project have the ability to:</p> <ul> <li>Add data to a project, for any site (NOTE: this might be restricted for non-staff in a future update)</li> <li>Change data in a project, including altering its published status, for their site only (unless they are a member of staff)</li> </ul>"},{"location":"backend/permissions/#analyst","title":"<code>analyst</code>","text":"<p>Actions: <code>get</code> <code>list</code> <code>filter</code> <code>history</code></p> <p>Users in the <code>analyst</code> group for a project have the ability to:</p> <ul> <li>Get individual objects from the project</li> <li>List and filter data from the project</li> <li>View the history of individual objects from the project</li> </ul>"},{"location":"backend/permissions/#managing-groups-for-a-user","title":"Managing groups for a user","text":""},{"location":"backend/permissions/#list-groups-for-a-user","title":"List groups for a user","text":"<pre><code>$ python manage.py user groups &lt;USER&gt;\n</code></pre>"},{"location":"backend/permissions/#grant-groups-to-a-user","title":"Grant groups to a user","text":"<pre><code>$ python manage.py user groups &lt;USER&gt; --grant &lt;GROUP1&gt; &lt;GROUP2&gt; ...\n</code></pre> <p>Match multiple group names via a regular expression:</p> <pre><code>$ python manage.py user groups &lt;USER&gt; --rxgrant &lt;REGEX&gt;\n</code></pre>"},{"location":"backend/permissions/#revoke-groups-from-a-user","title":"Revoke groups from a user","text":"<pre><code>$ python manage.py user groups &lt;USER&gt; --revoke &lt;GROUP1&gt; &lt;GROUP2&gt; ...\n</code></pre> <p>Match multiple group names via a regular expression:</p> <pre><code>$ python manage.py user groups &lt;USER&gt; --rxrevoke &lt;REGEX&gt;\n</code></pre>"},{"location":"backend/server_control/","title":"Server Control","text":""},{"location":"backend/server_control/#start-the-server","title":"Start the server","text":"<pre><code>$ ./scripts/start.sh\n</code></pre>"},{"location":"backend/server_control/#stop-the-server","title":"Stop the server","text":"<pre><code>$ ./scripts/stop.sh\n</code></pre>"},{"location":"backend/server_control/#view-access-logs","title":"View access logs","text":"<pre><code>$ tail -f access.log\n</code></pre>"},{"location":"backend/server_control/#view-error-logs","title":"View error logs","text":"<pre><code>$ tail -f error.log\n</code></pre>"},{"location":"backend/tests/","title":"Tests","text":""},{"location":"backend/tests/#run-the-tests","title":"Run the tests","text":"<p>To run the tests on highest verbosity:</p> <pre><code>$ python manage.py test -v 2\n</code></pre> <p>If the tests are run repeatedly, use the <code>--keepdb</code> flag:</p> <pre><code>$ python manage.py test -v 2 --keepdb\n</code></pre>"},{"location":"backend/tests/#code-coverage","title":"Code coverage","text":"<p>First, ensure test dependencies are installed:</p> <pre><code>$ poetry install --with test\n</code></pre> <p>Then, to generate coverage information:</p> <pre><code>$ coverage run --rcfile=../pyproject.toml manage.py test -v 2 --keepdb\n</code></pre> <p>This can be viewed in the command line:</p> <pre><code>$ coverage report\n</code></pre> <p>Or as a HTML report:</p> <pre><code>$ coverage html\n</code></pre>"},{"location":"fields/lookups/","title":"Lookups","text":"<p>Lookups can be used to specify more complex conditions that fields must match when filtering.</p> <p>Different types have different lookups available to them.</p>"},{"location":"fields/lookups/#exact","title":"<code>exact</code>","text":"<p><code>[text]</code> <code>[choice]</code> <code>[integer]</code> <code>[decimal]</code> <code>[date]</code> <code>[datetime]</code> <code>[bool]</code> <code>[array]</code> <code>[structure]</code></p> <p>Return values equal to the search value.</p>"},{"location":"fields/lookups/#ne","title":"<code>ne</code>","text":"<p><code>[text]</code> <code>[choice]</code> <code>[integer]</code> <code>[decimal]</code> <code>[date]</code> <code>[datetime]</code> <code>[bool]</code></p> <p>Return values not equal to the search value.</p>"},{"location":"fields/lookups/#in","title":"<code>in</code>","text":"<p><code>[text]</code> <code>[choice]</code> <code>[integer]</code> <code>[decimal]</code> <code>[date]</code> <code>[datetime]</code> <code>[bool]</code></p> <p>Return values that are within the set of search values.</p>"},{"location":"fields/lookups/#notin","title":"<code>notin</code>","text":"<p><code>[text]</code> <code>[choice]</code> <code>[integer]</code> <code>[decimal]</code> <code>[date]</code> <code>[datetime]</code> <code>[bool]</code></p> <p>Return values that are not within the set of search values.</p>"},{"location":"fields/lookups/#contains","title":"<code>contains</code>","text":"<p><code>[text]</code> <code>[array]</code> <code>[structure]</code></p> <p>Return values that contain the search value.</p>"},{"location":"fields/lookups/#startswith","title":"<code>startswith</code>","text":"<p><code>[text]</code></p> <p>Return values that start with the search value.</p>"},{"location":"fields/lookups/#endswith","title":"<code>endswith</code>","text":"<p><code>[text]</code></p> <p>Return values that end with the search value.</p>"},{"location":"fields/lookups/#iexact","title":"<code>iexact</code>","text":"<p><code>[text]</code></p> <p>Return values case-insensitively equal to the search value.</p>"},{"location":"fields/lookups/#icontains","title":"<code>icontains</code>","text":"<p><code>[text]</code></p> <p>Return values that case-insensitively contain the search value.</p>"},{"location":"fields/lookups/#istartswith","title":"<code>istartswith</code>","text":"<p><code>[text]</code></p> <p>Return values that case-insensitively start with the search value.</p>"},{"location":"fields/lookups/#iendswith","title":"<code>iendswith</code>","text":"<p><code>[text]</code></p> <p>Return values that case-insensitively end with the search value.</p>"},{"location":"fields/lookups/#length","title":"<code>length</code>","text":"<p><code>[text]</code> <code>[array]</code></p> <p>Return values with a length equal to the search value.</p>"},{"location":"fields/lookups/#length__in","title":"<code>length__in</code>","text":"<p><code>[text]</code> <code>[array]</code></p> <p>Return values with a length that is within the set of search values.</p>"},{"location":"fields/lookups/#length__range","title":"<code>length__range</code>","text":"<p><code>[text]</code> <code>[array]</code></p> <p>Return values with a length that is within an inclusive range of search values.</p>"},{"location":"fields/lookups/#lt","title":"<code>lt</code>","text":"<p><code>[integer]</code> <code>[decimal]</code> <code>[date]</code> <code>[datetime]</code></p> <p>Return values less than the search value.</p>"},{"location":"fields/lookups/#lte","title":"<code>lte</code>","text":"<p><code>[integer]</code> <code>[decimal]</code> <code>[date]</code> <code>[datetime]</code></p> <p>Return values less than or equal to the search value.</p>"},{"location":"fields/lookups/#gt","title":"<code>gt</code>","text":"<p><code>[integer]</code> <code>[decimal]</code> <code>[date]</code> <code>[datetime]</code></p> <p>Return values greater than the search value.</p>"},{"location":"fields/lookups/#gte","title":"<code>gte</code>","text":"<p><code>[integer]</code> <code>[decimal]</code> <code>[date]</code> <code>[datetime]</code></p> <p>Return values greater than or equal to the search value.</p>"},{"location":"fields/lookups/#range","title":"<code>range</code>","text":"<p><code>[integer]</code> <code>[decimal]</code> <code>[date]</code> <code>[datetime]</code></p> <p>Return values within an inclusive range of search values.</p>"},{"location":"fields/lookups/#iso_year","title":"<code>iso_year</code>","text":"<p><code>[date]</code> <code>[datetime]</code></p> <p>Return values with an ISO 8601 week-numbering year equal to the search year.</p>"},{"location":"fields/lookups/#iso_year__in","title":"<code>iso_year__in</code>","text":"<p><code>[date]</code> <code>[datetime]</code></p> <p>Return values with an ISO 8601 week-numbering year that is within the set of search years.</p>"},{"location":"fields/lookups/#iso_year__range","title":"<code>iso_year__range</code>","text":"<p><code>[date]</code> <code>[datetime]</code></p> <p>Return values with an ISO 8601 week-numbering year that is within an inclusive range of search years.</p>"},{"location":"fields/lookups/#week","title":"<code>week</code>","text":"<p><code>[date]</code> <code>[datetime]</code></p> <p>Return values with an ISO 8601 week number equal to the search number.</p>"},{"location":"fields/lookups/#week__in","title":"<code>week__in</code>","text":"<p><code>[date]</code> <code>[datetime]</code></p> <p>Return values with an ISO 8601 week number that is within the set of search numbers.</p>"},{"location":"fields/lookups/#week__range","title":"<code>week__range</code>","text":"<p><code>[date]</code> <code>[datetime]</code></p> <p>Return values with an ISO 8601 week number that is within an inclusive range of search numbers.</p>"},{"location":"fields/lookups/#isnull","title":"<code>isnull</code>","text":"<p><code>[text]</code> <code>[choice]</code> <code>[integer]</code> <code>[decimal]</code> <code>[date]</code> <code>[datetime]</code> <code>[bool]</code> <code>[relation]</code> <code>[array]</code> <code>[structure]</code></p> <p>Return values that are empty (<code>isnull = True</code>) or non-empty (<code>isnull = False</code>).</p> <ul> <li>For <code>text</code> and <code>choice</code> types, 'empty' is defined as the empty string <code>\"\"</code>.</li> <li>For the <code>relation</code> type, 'empty' is defined as there being zero items linked to the record being evaluated.</li> <li>For the <code>array</code> type, 'empty' is defined as the empty array <code>[]</code>.</li> <li>For the <code>structure</code> type, 'empty' is defined as the empty structure <code>{}</code>.</li> <li>For all other types, 'empty' is the SQL <code>null</code> value.</li> </ul>"},{"location":"fields/lookups/#contained_by","title":"<code>contained_by</code>","text":"<p><code>[array]</code> <code>[structure]</code></p> <p>Return values that are equal to, or a subset of, the search value.</p>"},{"location":"fields/lookups/#overlap","title":"<code>overlap</code>","text":"<p><code>[array]</code></p> <p>Return values that overlap with the search value.</p>"},{"location":"fields/lookups/#has_key","title":"<code>has_key</code>","text":"<p><code>[structure]</code></p> <p>Return values that have a top-level key which contains the search value.</p>"},{"location":"fields/lookups/#has_keys","title":"<code>has_keys</code>","text":"<p><code>[structure]</code></p> <p>Return values that have top-level keys which contains all of the search values.</p>"},{"location":"fields/lookups/#has_any_keys","title":"<code>has_any_keys</code>","text":"<p><code>[structure]</code></p> <p>Return values that have top-level keys which contains any of the search values.</p>"},{"location":"fields/types/","title":"Types","text":"<p>Types in Onyx define the various categories of data which can be stored.</p> <p>Each field belongs to a certain type. This dictates what kind of data the field can store (e.g. text, numbers, dates, etc.), as well as what filter operations (i.e. lookups) can be carried out on values of the field.</p>"},{"location":"fields/types/#text","title":"<code>text</code>","text":"<p><code>[exact]</code> <code>[ne]</code> <code>[in]</code> <code>[notin]</code> <code>[contains]</code> <code>[startswith]</code> <code>[endswith]</code> <code>[iexact]</code> <code>[icontains]</code> <code>[istartswith]</code> <code>[iendswith]</code> <code>[length]</code> <code>[length__in]</code> <code>[length__range]</code> <code>[isnull]</code></p> <p>A string of characters.</p> <p>Examples: <code>\"C-1234567890\"</code>, <code>\"Details about something\"</code></p>"},{"location":"fields/types/#choice","title":"<code>choice</code>","text":"<p><code>[exact]</code> <code>[ne]</code> <code>[in]</code> <code>[notin]</code> <code>[isnull]</code></p> <p>A restricted set of options.</p> <p>Examples: <code>\"ENG\"</code>, <code>\"WALES\"</code>, <code>\"SCOT\"</code>, <code>\"NI\"</code></p>"},{"location":"fields/types/#integer","title":"<code>integer</code>","text":"<p><code>[exact]</code> <code>[ne]</code> <code>[in]</code> <code>[notin]</code> <code>[lt]</code> <code>[lte]</code> <code>[gt]</code> <code>[gte]</code> <code>[range]</code> <code>[isnull]</code></p> <p>A whole number.</p> <p>Examples: <code>1</code>, <code>-1</code>, <code>123</code></p>"},{"location":"fields/types/#decimal","title":"<code>decimal</code>","text":"<p><code>[exact]</code> <code>[ne]</code> <code>[in]</code> <code>[notin]</code> <code>[lt]</code> <code>[lte]</code> <code>[gt]</code> <code>[gte]</code> <code>[range]</code> <code>[isnull]</code></p> <p>A decimal number.</p> <p>Examples: <code>1.234</code>, <code>1.0</code>, <code>23.456</code></p>"},{"location":"fields/types/#date","title":"<code>date</code>","text":"<p><code>[exact]</code> <code>[ne]</code> <code>[in]</code> <code>[notin]</code> <code>[lt]</code> <code>[lte]</code> <code>[gt]</code> <code>[gte]</code> <code>[range]</code> <code>[iso_year]</code> <code>[iso_year__in]</code> <code>[iso_year__range]</code> <code>[week]</code> <code>[week__in]</code> <code>[week__range]</code> <code>[isnull]</code></p> <p>A date.</p> <p>Examples: <code>\"2023-03\"</code>, <code>\"2023-04-05\"</code>, <code>\"2024-01-01\"</code></p>"},{"location":"fields/types/#datetime","title":"<code>datetime</code>","text":"<p><code>[exact]</code> <code>[ne]</code> <code>[in]</code> <code>[notin]</code> <code>[lt]</code> <code>[lte]</code> <code>[gt]</code> <code>[gte]</code> <code>[range]</code> <code>[iso_year]</code> <code>[iso_year__in]</code> <code>[iso_year__range]</code> <code>[week]</code> <code>[week__in]</code> <code>[week__range]</code> <code>[isnull]</code></p> <p>A date and time.</p> <p>Examples: <code>\"2023-01-01 15:30:03\"</code>, <code>\"2024-01-01 09:30:17\"</code></p>"},{"location":"fields/types/#bool","title":"<code>bool</code>","text":"<p><code>[exact]</code> <code>[ne]</code> <code>[in]</code> <code>[notin]</code> <code>[isnull]</code></p> <p>A true or false value.</p> <p>Examples: <code>True</code>, <code>False</code></p>"},{"location":"fields/types/#relation","title":"<code>relation</code>","text":"<p><code>[isnull]</code></p> <p>A link to a row, or multiple rows, in another table.</p>"},{"location":"fields/types/#array","title":"<code>array</code>","text":"<p><code>[exact]</code> <code>[contains]</code> <code>[contained_by]</code> <code>[overlap]</code> <code>[length]</code> <code>[length__in]</code> <code>[length__range]</code> <code>[isnull]</code></p> <p>A list of values.</p> <p>Examples: <code>[1, 2, 3]</code>, <code>[\"hello\", \"world\", \"!\"]</code></p>"},{"location":"fields/types/#structure","title":"<code>structure</code>","text":"<p><code>[exact]</code> <code>[contains]</code> <code>[contained_by]</code> <code>[has_key]</code> <code>[has_keys]</code> <code>[has_any_keys]</code> <code>[isnull]</code></p> <p>An arbitrary JSON structure.</p> <p>Examples: <code>{\"hello\" : \"world\", \"goodbye\" : \"!\"}</code>, <code>{\"numbers\" : [1, 2, {\"more_numbers\" : [3, 4, 5]}]}</code></p>"}]}